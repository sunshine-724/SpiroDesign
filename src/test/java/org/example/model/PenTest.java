package org.example.model;

import org.junit.jupiter.api.Test;

import java.awt.Color;
import java.awt.geom.Point2D;
import java.io.*;

import static org.junit.jupiter.api.Assertions.*;

public class PenTest {

    @Test
    void testDefaultConstructor() {
        Pen pen = new Pen();
        assertEquals(2.0, pen.getPenSize(), 1e-9);
        assertEquals(Color.BLACK, pen.getColor());
        assertEquals(new Point2D.Double(0, 0), pen.getPosition());
    }

    @Test
    void testParameterizedConstructor() {
        Point2D.Double pos = new Point2D.Double(10, 20);
        Pen pen = new Pen(2.5, Color.RED, pos);
        assertEquals(2.5, pen.getPenSize(), 1e-9);
        assertEquals(Color.RED, pen.getColor());
        assertEquals(pos, pen.getPosition());
    }

    @Test
    void testSetAndGetPosition() {
        Pen pen = new Pen();
        Point2D.Double pos = new Point2D.Double(5, 6);
        pen.setPosition(pos);
        assertEquals(pos, pen.getPosition());
    }

    @Test
    void testMoveWithSetPenPosition() {
        Pen pen = new Pen(1.0, Color.BLUE, new Point2D.Double(0, 0));
        // pinionPosition=(1,1), pinionRadius=2.0, theta=PI/2, alpha=0.0
        // → (1+2*cos(0), 1+2*sin(0)) = (3,1)
        pen.setPenPosition(new Point2D.Double(1, 1), 2.0, Math.PI / 2, 0.0);
        assertEquals(new Point2D.Double(3, 1), pen.getPosition());
        // 別角度
        pen.setPenPosition(new Point2D.Double(1, 1), 2.0, 0.0, Math.PI / 2);
        Point2D.Double expected = new Point2D.Double(1, 3);
        Point2D.Double actual = pen.getPosition();
        assertEquals(expected.x, actual.x, 1e-9);
        assertEquals(expected.y, actual.y, 1e-9);
    }

    @Test
    void testChangeColor() {
        Pen pen = new Pen();
        pen.changeColor(Color.YELLOW);
        assertEquals(Color.YELLOW, pen.getColor());
    }

    @Test
    void testChangeSize() {
        Pen pen = new Pen();
        pen.setPenSize(9.9);
        assertEquals(9.9, pen.getPenSize(), 1e-9);
    }

    @Test
    void testMultiplePositionChanges() {
        Pen pen = new Pen();
        pen.setPosition(new Point2D.Double(1, 2));
        assertEquals(new Point2D.Double(1, 2), pen.getPosition());
        pen.setPosition(new Point2D.Double(-5, 100));
        assertEquals(new Point2D.Double(-5, 100), pen.getPosition());
    }

    @Test
    void testSerialization() throws Exception {
        Pen pen = new Pen(4.4, Color.PINK, new Point2D.Double(7, 8));
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(baos);
        oos.writeObject(pen);
        oos.close();

        ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));
        Pen deserialized = (Pen) ois.readObject();
        assertEquals(4.4, deserialized.getPenSize(), 1e-9);
        assertEquals(Color.PINK, deserialized.getColor());
        assertEquals(new Point2D.Double(7, 8), deserialized.getPosition());
    }
}
