package org.example.model;

import org.junit.jupiter.api.Test;
import java.awt.Color;
import java.awt.geom.Point2D;

public class PenTest {

    @Test
    void testDefaultConstructor() {
        // 入力値
        Pen pen = new Pen();
        // 予想される値
        double expectedPenSize = 5.0;
        Color expectedColor = Color.BLACK;
        Point2D.Double expectedPosition = null;

        // 判定
        if (Math.abs(pen.penSize - expectedPenSize) < 1e-9 &&
                pen.color.equals(expectedColor) &&
                pen.getPosition() == expectedPosition) {
            System.out.println("良好");
        } else {
            System.out.println("不良");
        }
    }

    @Test
    void testParameterizedConstructor() {
        // 入力値
        Point2D.Double pos = new Point2D.Double(10, 20);
        Pen pen = new Pen(2.5, Color.RED, pos);
        // 予想される値
        double expectedPenSize = 2.5;
        Color expectedColor = Color.RED;
        Point2D.Double expectedPosition = pos;

        // 判定
        if (Math.abs(pen.penSize - expectedPenSize) < 1e-9 &&
                pen.color.equals(expectedColor) &&
                pen.getPosition().equals(expectedPosition)) {
            System.out.println("良好");
        } else {
            System.out.println("不良");
        }
    }

    @Test
    void testMove() {
        // 入力値
        Point2D.Double pos = new Point2D.Double(0, 0);
        Pen pen = new Pen(1.0, Color.BLUE, pos);
        pen.move(new Point2D.Double(1, 1), 2.0, Math.PI / 2, 0.0);
        // 予想される値
        Point2D.Double expectedPosition = new Point2D.Double(1, 3);

        // 判定
        if (pen.getPosition().equals(expectedPosition)) {
            System.out.println("良好");
        } else {
            System.out.println("不良");
        }
    }

    @Test
    void testSetAndGetPosition() {
        // 入力値
        Pen pen = new Pen();
        Point2D.Double pos = new Point2D.Double(5, 6);
        pen.setPosition(pos);
        // 予想される値
        Point2D.Double expectedPosition = pos;

        // 判定
        if (pen.getPosition().equals(expectedPosition)) {
            System.out.println("良好");
        } else {
            System.out.println("不良");
        }
    }

    @Test
    void testChangeColor() {
        // 入力値
        Pen pen = new Pen();
        pen.changeColor(Color.YELLOW);
        // 予想される値
        Color expectedColor = Color.YELLOW;

        // 判定
        if (pen.color.equals(expectedColor)) {
            System.out.println("良好");
        } else {
            System.out.println("不良");
        }
    }

    @Test
    void testChangeSize() {
        // 入力値
        Pen pen = new Pen();
        pen.changeSize(9.9);
        // 予想される値
        double expectedPenSize = 9.9;

        // 判定
        if (Math.abs(pen.penSize - expectedPenSize) < 1e-9) {
            System.out.println("良好");
        } else {
            System.out.println("不良");
        }
    }

    @Test
    void testGetPenSize() {
        // 入力値
        Pen pen = new Pen();
        pen.changeSize(3.3);
        // 予想される値
        double expectedPenSize = 3.3;

        // 判定
        if (Math.abs(pen.getPenSize() - expectedPenSize) < 1e-9) {
            System.out.println("良好");
        } else {
            System.out.println("不良");
        }
    }
}
